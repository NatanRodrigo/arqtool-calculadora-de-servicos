// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using caiobadev_api_arqtool.Context;

#nullable disable

namespace caiobadev_api_arqtool.Migrations
{
    [DbContext(typeof(ApiArqtoolContext))]
    [Migration("20240618164033_E la vai outra")]
    partial class Elavaioutra
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("caiobadev_api_arqtool.Identity.Services.Perfil", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.Atividade", b =>
                {
                    b.Property<int>("AtividadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("DuracaoEmHoras")
                        .HasColumnType("double");

                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("AtividadeId");

                    b.HasIndex("EtapaId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.DespesaMensal", b =>
                {
                    b.Property<int>("DespesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("GastoAnual")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GastoMensal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Hora")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("PorcentagemGastoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("DespesaId");

                    b.ToTable("DespesasMensais");
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.Etapa", b =>
                {
                    b.Property<int>("EtapaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Complexidade")
                        .HasColumnType("int");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeHoras")
                        .HasColumnType("double");

                    b.Property<double>("ValorDaEtapa")
                        .HasColumnType("double");

                    b.HasKey("EtapaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Etapas");
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.Projeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("AcrescimoTotalComplexidade")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AcrescimoTotalUrgencia")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Complexidade")
                        .HasColumnType("int");

                    b.Property<int>("ComplexidadeMedia")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("QuantidadeAmbientes")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeAmbientesMolhados")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeAtividades")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeEtapas")
                        .HasColumnType("int");

                    b.Property<double?>("QuantidadeHoras")
                        .HasColumnType("double");

                    b.Property<int?>("Urgencia")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ValorTotalAmbientesMolhados")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double?>("ValorTotalDasEtapas")
                        .HasColumnType("double");

                    b.Property<decimal?>("ValorTotalProjeto")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ProjetoId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.ValorIdealHoraTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("CustoFerias")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("DiasFeriasPorAno")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiasTrabalhadosPorMes")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("DiasTrabalhadosPorSemana")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("FaturamentoMensalDesejado")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FaturamentoMensalMinimo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("HorasTrabalhadasPorDia")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HorasTrabalhadasPorMes")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PercentualCustoFerias")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PercentualReservaFerias")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ReservaFinanceira")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TotalDespesasMensais")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("ValorIdealHoraDeTrabalho")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ValorMinimoHoraDeTrabalho")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("ValoresIdeaisHoraTrabalho");
                });

            modelBuilder.Entity("caiobadev_gmcapi.Identity.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.Atividade", b =>
                {
                    b.HasOne("caiobadev_api_arqtool.Models.Etapa", "Etapa")
                        .WithMany("Atividades")
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etapa");
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.Etapa", b =>
                {
                    b.HasOne("caiobadev_api_arqtool.Models.Projeto", "Projeto")
                        .WithMany("Etapas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("caiobadev_api_arqtool.Identity.Services.Perfil", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("caiobadev_gmcapi.Identity.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("caiobadev_gmcapi.Identity.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("caiobadev_api_arqtool.Identity.Services.Perfil", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caiobadev_gmcapi.Identity.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("caiobadev_gmcapi.Identity.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.Etapa", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("caiobadev_api_arqtool.Models.Projeto", b =>
                {
                    b.Navigation("Etapas");
                });
#pragma warning restore 612, 618
        }
    }
}
